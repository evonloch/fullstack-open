{"ast":null,"code":"var _jsxFileName = \"/home/palash/Desktop/Toptal/Fullstack Open/exercise/countries/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [searchedCountries, setSearchedCountries] = useState([]);\n\n  const hook = () => {\n    const eventHandler = response => {\n      setCountries(response.data);\n      console.log(response.data);\n    };\n\n    const promise = axios.get('https://restcountries.eu/rest/v2/all');\n    promise.then(eventHandler);\n  };\n\n  useEffect(hook, []);\n\n  const onChange = e => {\n    const newSearchedCountries = countries.filter(c => c.name.toLowerCase().includes(e.target.value.toLowerCase()));\n    setSearchedCountries(newSearchedCountries);\n  };\n\n  var list;\n\n  if (searchedCountries.length > 10) {\n    list = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Too many matches, specify another filter.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  } else if (searchedCountries.length === 1) {\n    list = searchedCountries.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: c.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), \"capital: \", c.capital, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), \"population: \", c.population, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Languages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: c.languages.map(L => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: L.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 32\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this));\n  } else {\n    list = searchedCountries.map(c => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: c.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 38\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"find countires: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this), list]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"xlPAL8l4Nd83zKglNEqo15JOqeU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/palash/Desktop/Toptal/Fullstack Open/exercise/countries/src/App.js"],"names":["React","useState","useEffect","axios","App","countries","setCountries","searchedCountries","setSearchedCountries","hook","eventHandler","response","data","console","log","promise","get","then","onChange","e","newSearchedCountries","filter","c","name","toLowerCase","includes","target","value","list","length","map","capital","population","languages","L"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,iBAAD,EAAoBC,oBAApB,IAA4CP,QAAQ,CAAC,EAAD,CAA1D;;AAEA,QAAMQ,IAAI,GAAG,MAAK;AAChB,UAAMC,YAAY,GAAGC,QAAQ,IAAG;AAC9BL,MAAAA,YAAY,CAACK,QAAQ,CAACC,IAAV,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACD,KAHD;;AAKA,UAAMG,OAAO,GAAGZ,KAAK,CAACa,GAAN,CAAU,sCAAV,CAAhB;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAaP,YAAb;AACD,GARD;;AAUAR,EAAAA,SAAS,CAACO,IAAD,EAAO,EAAP,CAAT;;AAEA,QAAMS,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAMC,oBAAoB,GAAGf,SAAS,CAACgB,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,QAArB,CAA8BN,CAAC,CAACO,MAAF,CAASC,KAAT,CAAeH,WAAf,EAA9B,CAAtB,CAA7B;AACAhB,IAAAA,oBAAoB,CAACY,oBAAD,CAApB;AACD,GAHD;;AAKA,MAAIQ,IAAJ;;AAEA,MAAIrB,iBAAiB,CAACsB,MAAlB,GAA2B,EAA/B,EAAkC;AAChCD,IAAAA,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFC,MAGK,IAAGrB,iBAAiB,CAACsB,MAAlB,KAA6B,CAAhC,EAAkC;AACrCD,IAAAA,IAAI,GAAGrB,iBAAiB,CAACuB,GAAlB,CAAsBR,CAAC,iBAC5B;AAAA,8BACE;AAAA,kBAAKA,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,eAEYD,CAAC,CAACS,OAFd,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,kBAIeT,CAAC,CAACU,UAJjB,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA,kBACEV,CAAC,CAACW,SAAF,CAAYH,GAAZ,CAAgBI,CAAC,iBAAI;AAAA,oBAAKA,CAAC,CAACX;AAAP;AAAA;AAAA;AAAA;AAAA,gBAArB;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAcD,GAfI,MAgBD;AACFK,IAAAA,IAAI,GAAGrB,iBAAiB,CAACuB,GAAlB,CAAsBR,CAAC,iBAAG;AAAA,gBAAIA,CAAC,CAACC;AAAN;AAAA;AAAA;AAAA;AAAA,YAA1B,CAAP;AACD;;AAED,sBACE;AAAA,gDACkB;AAAO,MAAA,QAAQ,EAAIL;AAAnB;AAAA;AAAA;AAAA;AAAA,YADlB,EAEIU,IAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CArDD;;GAAMxB,G;;KAAAA,G;AAuDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst App = () => {\n\n  const [countries, setCountries] = useState([])\n  const [searchedCountries, setSearchedCountries] = useState([])\n\n  const hook = () =>{\n    const eventHandler = response =>{\n      setCountries(response.data)\n      console.log(response.data)\n    }\n\n    const promise = axios.get('https://restcountries.eu/rest/v2/all')\n    promise.then(eventHandler)\n  }\n\n  useEffect(hook, [])\n\n  const onChange = (e) => {\n    const newSearchedCountries = countries.filter(c => c.name.toLowerCase().includes(e.target.value.toLowerCase()))\n    setSearchedCountries(newSearchedCountries)\n  }\n\n  var list\n\n  if (searchedCountries.length > 10){\n    list = <p>Too many matches, specify another filter.</p>\n}\n  else if(searchedCountries.length === 1){\n    list = searchedCountries.map(c => \n      <div>\n        <h1>{c.name}</h1>\n        capital: {c.capital}\n        <br/>\n        population: {c.population}\n        <br/>\n        <h2>Languages</h2>\n        <ul>\n         {c.languages.map(L => <li>{L.name}</li>)}\n        </ul>\n        \n      </div>\n      )\n  }\n  else{\n    list = searchedCountries.map(c=> <p>{c.name}</p>)\n  }\n\n  return(\n    <div>\n      find countires: <input onChange = {onChange}/>\n      { list }\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}