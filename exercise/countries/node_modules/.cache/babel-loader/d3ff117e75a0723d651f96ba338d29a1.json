{"ast":null,"code":"var _jsxFileName = \"/home/palash/Desktop/Toptal/Fullstack Open/exercise/countries/src/components/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = ({\n  capital\n}) => {\n  _s();\n\n  const [weather, setWeather] = useState('');\n  useEffect(() => {\n    axios.get(`http://api.weatherstack.com/current\n        ? access_key = 9dab35850481fd5b9a2e94ccf95a7af5\n        & query = ${capital}`).then(response => {\n      setWeather(response.data);\n    });\n  }, []);\n\n  if (!weather) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }, this), \" \", weather.current.temperature, \" Celsius\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 82\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: weather.current.weather_icons,\n        alt: weather.current.weather_descriptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"wind\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), \" \", weather.current.wind_speed, \" km/h, direction \", weather.current.wind_dir, \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Weather, \"gW7DJH5WpAMtzc/d+tTNiRPRzqI=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/home/palash/Desktop/Toptal/Fullstack Open/exercise/countries/src/components/Weather.js"],"names":["React","useEffect","useState","axios","Weather","capital","weather","setWeather","get","then","response","data","current","temperature","weather_icons","weather_descriptions","wind_speed","wind_dir"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVE,IAAAA,KAAK,CAACK,GAAN,CAAW;AACnB;AACA,oBAAoBH,OAAQ,EAFpB,EAGKI,IAHL,CAGUC,QAAQ,IAAI;AACdH,MAAAA,UAAU,CAACG,QAAQ,CAACC,IAAV,CAAV;AACH,KALL;AAMH,GAPQ,EAOP,EAPO,CAAT;;AASA,MAAG,CAACL,OAAJ,EAAY;AACR,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,sBACI;AAAA,4BACI;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAAiCA,OAAO,CAACM,OAAR,CAAgBC,WAAjD,2BAAqE;AAAA;AAAA;AAAA;AAAA,cAArE,eACT;AAAK,QAAA,GAAG,EAAEP,OAAO,CAACM,OAAR,CAAgBE,aAA1B;AAAyC,QAAA,GAAG,EAAER,OAAO,CAACM,OAAR,CAAgBG;AAA9D;AAAA;AAAA;AAAA;AAAA,cADS;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGL;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAA0BT,OAAO,CAACM,OAAR,CAAgBI,UAA1C,uBAAuEV,OAAO,CAACM,OAAR,CAAgBK,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHK;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAzBD;;GAAMb,O;;KAAAA,O;AA0BN,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\n\nconst Weather = ({capital}) => {\n    const [weather, setWeather] = useState('')\n    useEffect(()=>{\n        axios.get(`http://api.weatherstack.com/current\n        ? access_key = 9dab35850481fd5b9a2e94ccf95a7af5\n        & query = ${capital}`)\n            .then(response => {\n                setWeather(response.data)\n            })\n    },[])\n\n    if(!weather){\n        return(\n            <div></div>\n        )\n    }\n\n    return(\n        <div>\n            <p><strong>temperature</strong> {weather.current.temperature} Celsius<br />\n\t\t\t<img src={weather.current.weather_icons} alt={weather.current.weather_descriptions}/></p>\n\t\t\t<p><strong>wind</strong> {weather.current.wind_speed} km/h, direction {weather.current.wind_dir}  </p>\n\t\t</div>\t\t\n    )\n\n}\nexport default Weather\n\n"]},"metadata":{},"sourceType":"module"}